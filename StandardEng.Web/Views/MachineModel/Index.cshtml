
@{
    ViewBag.Title = "Machine Models";
}

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">Home</span> - Machine Models</h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action("Index","Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">Machine Models</span>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Machine Models List</h5>
                </div>
                <div class="card-body">

                    @(Html.Kendo().Grid<tblMachineModels>()
                                        .Name("gridMachineModels")
                                        .Columns(columns =>
                                        {
                                            if (AuthorizationHelper.CanEditDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                            {
                                                columns.Command(command =>
                                                {
                                                    if (AuthorizationHelper.CanEdit(ViewContext.RouteData.Values["Controller"].ToString()))
                                                    {
                                                        command.Edit().Text(" ");
                                                    }
                                                    if (AuthorizationHelper.CanDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                                    {
                                                        command.Destroy().Text(" ");
                                                    }
                                                }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                                   .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);

                                            }
                                            columns.ForeignKey(d => d.MachineTypeId, (IEnumerable)ViewBag.MachineTypeList, "MachineTypeId", "MachineTypeName");
                                            columns.Bound(d => d.MachineName);
                                            columns.Bound(d => d.WarrantyPeriod);
                                            if (AuthorizationHelper.CanChangeStatus(ViewContext.RouteData.Values["Controller"].ToString()))
                                            {
                                                columns.Bound(d => d.IsActive).Filterable(false)
                                                               .ClientTemplate(Html.SetStatusClientTemplate("IsActive", "MachineModel", "ChangeStatus",
                                                               "id=#= MachineModelId #", "#= MachineModelId #", "gridMachineModels", "MachineModel")).HtmlAttributes(WebHelper.StatusColumnStyle)
                                                               .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);
                                            }

                                        })
                                        .ToolBar(toolbar =>
                                        {
                                            if (AuthorizationHelper.CanAdd(ViewContext.RouteData.Values["Controller"].ToString()))
                                            {
                                                toolbar.Create().Text("Add");
                                            }
                                        })
                                        .Editable(editable =>
                                        {
                                            editable.Mode(GridEditMode.PopUp);
                                            editable.DisplayDeleteConfirmation("Are you sure you want to delete these Machine Model?");
                                            editable.Window(x => x.Title("Manage Machine Model"));
                                        })
                                        .Pageable(x =>
                                        {
                                            x.Refresh(true);
                                            x.PageSizes(WebHelper.PageSizes);
                                        })
                                        .Sortable(sortable => sortable.AllowUnsort(false))
                                        .Filterable()
                                        .NoRecords()
                                        .Events(grid => grid.Edit("edit"))
                                        .DataSource(dataSource => dataSource
                                            .Ajax()
                                            .ServerOperation(true)
                                            .PageSize(WebHelper.PageSize)
                                            .Model(model => model.Id(d => d.MachineModelId))
                                            .Events(events => events.Error("onError(\"gridMachineModels\")"))
                                            .Create(update => update.Action("KendoSave", "MachineModel"))
                                            .Read(read => read.Action("KendoRead", "MachineModel"))
                                            .Update(update => update.Action("KendoSave", "MachineModel"))
                                            .Destroy(update => update.Action("KendoDestroy", "MachineModel"))
                                        ))
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function edit(e) {
        if (e.model.isNew()) {
            e.model.set("MachineTypeId", "");
            e.model.set("IsActive", true);
        }
        e.container.data('kendoWindow').bind('activate', function () {
            setFocusById('MachineName');
        });
    }

</script>
