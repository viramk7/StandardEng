@model tblMachinePartsQuotationDetail

@Html.HiddenFor(m => m.MPQDetailId)

<div class="editor-label">
    @Html.LabelFor(m => m.MachineTypeId)
</div>
<div class="editor-field">
    @(Html.Kendo().ComboBoxFor(m => m.MachineTypeId)
                                                          .Value(Model.MachineTypeId == 0 ? string.Empty : Model.MachineTypeId.ToString())
                                                          .Placeholder("--Select Machine Type --")
                                                          .DataTextField("MachineTypeName")
                                                          .DataValueField("MachineTypeId")
                                                          .HtmlAttributes(new { @tabindex = 1, @data_value_primitive = true })
                                                          .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("GetMachineTypeList", "Common");
                                                              });
                                                          })
    )

    @Html.ValidationMessageFor(m => m.MachineTypeId)
</div>
<div class="editor-label">
    @Html.LabelFor(m => m.MachineModelId)
</div>
<div class="editor-field">
    @(Html.Kendo().ComboBoxFor(m => m.MachineModelId)
                                                          .Value(Model.MachineModelId == 0 ? string.Empty : Model.MachineModelId.ToString())
                                                          .Placeholder("--Select Machine --")
                                                          .DataTextField("MachineName")
                                                          .DataValueField("MachineModelId")
                                                          .Enable(false)
                                                          .AutoBind(false)
                                                          .CascadeFrom("MachineTypeId")
                                                          .HtmlAttributes(new { @tabindex = 2, @data_value_primitive = true })
                                                          .DataSource(source =>
                                                          {
                                                              source.Read(read =>
                                                              {
                                                                  read.Action("GetMachineModelList", "Common").Data("filterMachine");
                                                              }).ServerFiltering(true);
                                                          })
    )
    @Html.ValidationMessageFor(m => m.MachineModelId)
</div>
<div class="editor-label">
    @Html.LabelFor(m => m.MachineModelSerialNo)
</div>
<div class="editor-field">
    @Html.Kendo().TextBoxFor(m => m.MachineModelSerialNo).HtmlAttributes(new { @class = "k-textbox", @tabindex = 3 })
    @Html.ValidationMessageFor(m => m.MachineModelSerialNo)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.MachinePartsId)
</div>
<div class="editor-field">
    @(Html.Kendo().ComboBoxFor(m => m.MachinePartsId)
                           .Value(Model.MachinePartsId == 0 ? string.Empty : Model.MachinePartsId.ToString())
                           .Placeholder("--Select Machine Part --")
                           .DataTextField("ProductValue")
                           .DataValueField("MachinePartId")
                           .Enable(false)
                           .AutoBind(false)
                           .CascadeFrom("MachineTypeId")
                           .HtmlAttributes(new { @tabindex = 4, @data_value_primitive = true })
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetMachinePartList", "Common").Data("filterMachine");
                               }).ServerFiltering(true);
                           })
                           .Suggest(true)
                           .Filter("startswith")
                           .Events(e => e.Change("onChangeMPart"))
    )
    @Html.ValidationMessageFor(m => m.MachinePartsId)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.MachinePartDescription)
</div>
<div class="editor-field">
    @Html.Kendo().TextBoxFor(m => m.MachinePartDescription).HtmlAttributes(new { @class = "k-textbox", @tabindex = 5, @readonly = "readonly" })
    @Html.ValidationMessageFor(m => m.MachinePartDescription)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.PartsHSNCode)
</div>
<div class="editor-field">
    @Html.Kendo().TextBoxFor(m => m.PartsHSNCode).HtmlAttributes(new { @class = "k-textbox", @tabindex = 6, @readonly = "readonly" })
    @Html.ValidationMessageFor(m => m.PartsHSNCode)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.PartsQuantity)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.PartsQuantity).HtmlAttributes(new { @tabindex = 7 })
                                    .Spinners(false).Min(0).Events(e => e.Change("ChangeTotalPrice")))
    @Html.ValidationMessageFor(m => m.PartsQuantity)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.UnitPrice)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.UnitPrice).HtmlAttributes(new { @tabindex = 8 })
                                    .Spinners(false).Min(0).Events(e => e.Change("ChangeTotalPrice")))
    @Html.ValidationMessageFor(m => m.UnitPrice)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.TotalPrice)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.TotalPrice).HtmlAttributes(new { @readonly = "readonly" })
                        .Spinners(false).Min(0).Decimals(2).Events(e => e.Change("ChangeTaxablePrice")))
    @Html.ValidationMessageFor(m => m.TotalPrice)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.PAndFPercentage)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.PAndFPercentage).HtmlAttributes(new { @tabindex = 9 })
                        .Spinners(false).Min(0).Events(e => e.Change("ChangeTaxablePrice")))
    @Html.ValidationMessageFor(m => m.PAndFPercentage)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.ProfitMarginPercentage)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.ProfitMarginPercentage).HtmlAttributes(new { @tabindex = 10 })
                        .Spinners(false).Min(0).Events(e => e.Change("ChangeTaxablePrice")))
    @Html.ValidationMessageFor(m => m.ProfitMarginPercentage)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.SellingPrice)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.SellingPrice).HtmlAttributes(new { @readonly = "readonly" })
                        .Spinners(false).Min(0).Decimals(2))
    @Html.ValidationMessageFor(m => m.SellingPrice)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.DiscountPercentage)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.DiscountPercentage).HtmlAttributes(new { @tabindex = 11 })
                        .Spinners(false).Min(0).Events(e => e.Change("ChangeTaxablePrice")))
    @Html.ValidationMessageFor(m => m.DiscountPercentage)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.TaxablePrice)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.TaxablePrice).HtmlAttributes(new { @readonly = "readonly" })
                        .Spinners(false).Min(0))
    @Html.ValidationMessageFor(m => m.TaxablePrice)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.GSTPercentage)
</div>
<div class="editor-field">
    @(Html.Kendo().ComboBoxFor(m => m.GSTPercentage)
                          //.Value(Model.GSTPercentage == 0 ? string.Empty : Model.GSTPercentage.ToString())
                          .Placeholder("--Select GST Percentage --")
                          .DataTextField("Percentage")
                          .DataValueField("Id")
                          .HtmlAttributes(new { @tabindex = 12 })
                          .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("GetGSTPercentageList", "Common");
                              });
                          })
                          //.ValuePrimitive(false)
                          .Events(e => e.Change("onChangeGST"))
    )
    @Html.ValidationMessageFor(m => m.GSTPercentage)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.GSTAmount)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.GSTAmount).HtmlAttributes(new { @readonly = "readonly" })
                        .Spinners(false).Min(0))
    @Html.ValidationMessageFor(m => m.GSTAmount)
</div>

<div class="editor-label">
    @Html.LabelFor(m => m.FinalAmount)
</div>
<div class="editor-field">
    @(Html.Kendo().NumericTextBoxFor(m => m.FinalAmount).HtmlAttributes(new { @readonly = "readonly" })
                        .Spinners(false).Min(0))
    @Html.ValidationMessageFor(m => m.FinalAmount)
</div>


