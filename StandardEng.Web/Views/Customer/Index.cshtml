@{
    ViewBag.Title = "Customer";
}

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">Home</span> - Customers</h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action("Index","Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">Customers</span>
            </div>
        </div>
    </div>
</div>
<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Customer List</h5>
                </div>
                <div class="card-body">

                    @(Html.Kendo().Grid<tblCustomer>()
                           .Name("gridCustomer")
                           .Columns(columns =>
                           {
                               if (AuthorizationHelper.CanEditDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                               {
                                   columns.Command(command =>
                                   {
                                       if (AuthorizationHelper.CanEdit(ViewContext.RouteData.Values["Controller"].ToString()))
                                       {
                                           command.Custom("Edit").Text("<span class='k-icon k-i-edit' title='Edit'></span>").HtmlAttributes(new { @style = "margin:2px" }).Click("onEdit");
                                       }
                                       if (AuthorizationHelper.CanDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                       {
                                           command.Custom("Delete").Text("<span class='k-icon k-i-close' title='Delete'></span>").HtmlAttributes(new { @style = "margin:2px;" }).Click("onDelete");
                                       }
                                   }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                      .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);

                               }
                               columns.Bound(d => d.CustomerName);
                               columns.Bound(d => d.ContactNo);
                               columns.Bound(d => d.Email);
                               columns.Bound(d => d.Addressline1);
                               columns.ForeignKey(d => d.CityId, (IEnumerable)ViewBag.CityList, "CityId", "CityName");
                               columns.ForeignKey(d => d.StateId, (IEnumerable)ViewBag.StateList, "StateId", "StateName");
                               columns.ForeignKey(d => d.CountryId, (IEnumerable)ViewBag.CountryList, "CountryId", "CountryName");
                               columns.Bound(d => d.GST);

                               if (AuthorizationHelper.CanChangeStatus(ViewContext.RouteData.Values["Controller"].ToString()))
                               {
                                   columns.Bound(d => d.IsActive).Filterable(false)
                                                  .ClientTemplate(Html.SetStatusClientTemplate("IsActive", "Customer", "ChangeStatus",
                                                  "id=#= CustomerId #", "#= CustomerId #", "gridCustomer", "Customer")).HtmlAttributes(WebHelper.StatusColumnStyle)
                                                  .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);
                               }
                           })
                           .ToolBar(toolbar =>
                           {
                               if (AuthorizationHelper.CanAdd(ViewContext.RouteData.Values["Controller"].ToString()))
                               {
                                   toolbar.Template("<a class='k-button k-button-icontext' onclick='onAdd()' href='javascript:void(0)'><span class='k-icon k-i-plus' title='Add'></span>Add</a> ");
                               }
                           })
                           .Pageable(x =>
                           {
                               x.Refresh(true);
                               x.PageSizes(WebHelper.PageSizes);
                           })
                           .Sortable(sortable => sortable.AllowUnsort(false))
                           .Filterable()
                           .NoRecords()
                           .DataSource(dataSource => dataSource
                               .Ajax()
                               .ServerOperation(true)
                               .PageSize(WebHelper.PageSize)
                               .Model(model => model.Id(d => d.CustomerId))
                               .Events(events => events.Error("onError(\"gridCustomer\")"))
                               .Read(read => read.Action("KendoRead", "Customer"))
                           ))
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
     function onAdd() {
        window.location.href = '@Url.Action("Create", "Customer")';
    }

    function onEdit(e) {
        e.preventDefault();
        var tr = $(e.target).closest("tr");
        var data = this.dataItem(tr);
        var urllink = '@Url.Action("Edit", "Customer")';
        if (data != null)
            window.location.href = urllink + "?id=" + data.CustomerId;
    }


    function onDelete(e) {
        bootbox.confirm('Are you sure you want to delete this Customer?', function (result) {
            if (result === true) {
                e.preventDefault();
                var grid = $("#gridCustomer").data("kendoGrid");
                var tr = $(e.target).closest("tr");
                var data = grid.dataItem(tr);
                var url = '@Url.Action("KendoDestroy", "Customer")';
                if (data != null)
                    callwebservice(url, 'id=' + data.CustomerId, DeleteComplete, false, datatypeEnum.text, typeEnum.post);
            }
        }, 'popup-confirmation');
    }

    function DeleteComplete(returString) {
        if (returString != null) {
            if (returString !== "") {
                showMessageOnly(returString, 'popup-error');
            } else {
                SucessMessage('Customer deleted succesfully.')
                readKendoGrid('gridCustomer');
            }
        }
    }

</script>
