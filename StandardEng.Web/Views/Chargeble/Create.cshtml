@model tblChargeble
@{
    ViewBag.Title = "Manage Chargeble";
}
<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">Home</span> - Chargeble </h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action("Index","Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">Manage Chargeble</span>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("SaveModelData", "Chargeble", FormMethod.Post, new { @class = "form form-horizontal", @id = "validation-form", @enctype = "multipart/form-data" }))
            {
                @Html.ValidationSummary(true)
                <div class="card">
                    <div class="card-header header-elements-inline">
                        <h5 class="card-title">
                            @if (Model.ChargebleId > 0)
                            {
                                @Html.Label("Chargeble Quotation Number :  ")
                                @Html.DisplayFor(m => m.QuotationNo)
                            }
                        </h5>
                        <div class="col-lg-7 text-right">
                            <input type="submit" class="btn btn-outline-primary legitRipple" value="Save" name="create" tabindex="15" />
                            <a href="@Url.Action("Index", "Chargeble")" class="btn btn-outline-primary legitRipple" tabindex="18">Back</a>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        @Html.HiddenFor(m => m.ChargebleId)
                        @Html.HiddenFor(m => m.ChargebleQId)
                        @Html.HiddenFor(m => m.ChargebleQDetailId)
                        @Html.HiddenFor(m => m.CreatedBy)
                        @Html.HiddenFor(m => m.CreatedDate)
                        @Html.HiddenFor(m => m.QuotationNo)
                        @Html.HiddenFor(m => m.FinalAmountInWords)

                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.ChargebleDate, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.Kendo().DatePickerFor(m => m.ChargebleDate).HtmlAttributes(new { @tabindex = 5, @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.ChargebleDate)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.CustomerId, new { @class = "col-sm-6 col-lg-4 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @(Html.Kendo().ComboBoxFor(m => m.CustomerId)
                                                                                                                              .Value(Model.CustomerId == 0 ? string.Empty : Model.CustomerId.ToString())
                                                                                                                              .Placeholder("--Select Customer --")
                                                                                                                              .DataTextField("CustomerName")
                                                                                                                              .DataValueField("CustomerId")
                                                                                                                              .HtmlAttributes(new { @tabindex = 1, @readonly = "readonly" })
                                                                                                                              .DataSource(source =>
                                                                                                                              {
                                                                                                                                  source.Read(read =>
                                                                                                                                  {
                                                                                                                                      read.Action("GetCustomerList", "Common");
                                                                                                                                  });
                                                                                                                              })
                                        )

                                        @Html.ValidationMessageFor(m => m.CustomerId)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.CustomerContactPId, new { @class = "col-sm-6 col-lg-4 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @(Html.Kendo().ComboBoxFor(m => m.CustomerContactPId)
                                                                                                              .Value(Model.CustomerContactPId == 0 ? string.Empty : Model.CustomerContactPId.ToString())
                                                                                                              .Placeholder("--Select Contact Person --")
                                                                                                              .DataTextField("ContactPersonName")
                                                                                                              .DataValueField("ContactPersonId")
                                                                                                              .Enable(false)
                                                                                                              .AutoBind(false)
                                                                                                              .CascadeFrom("CustomerId")
                                                                                                              .HtmlAttributes(new { @tabindex = 3, @readonly = "readonly" })
                                                                                                              .DataSource(source =>
                                                                                                              {
                                                                                                                  source.Read(read =>
                                                                                                                  {
                                                                                                                      read.Action("GetCustomerContactPersonList", "Common").Data("filterContactPerson");
                                                                                                                  }).ServerFiltering(true);
                                                                                                              })
                                        )
                                        @Html.ValidationMessageFor(m => m.CustomerContactPId)
                                    </div>
                                </div>

                            </div>

                            <div class="col-lg-6">

                                <div class="form-group">
                                    @Html.LabelFor(m => m.ContactNo, new { @class = "col-sm-6 col-lg-6 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @Html.Kendo().TextBoxFor(m => m.ContactNo).HtmlAttributes(new { @tabindex = 4, @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.ContactNo)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.EmailAddress, new { @class = "col-sm-6 col-lg-6 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @Html.Kendo().TextBoxFor(m => m.EmailAddress).HtmlAttributes(new { @tabindex = 4, @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.EmailAddress)
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.MachineTypeId, new { @class = "col-sm-6 col-lg-4 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @(Html.Kendo().ComboBoxFor(m => m.MachineTypeId)
                                                                                              .Value(Model.MachineTypeId == 0 ? string.Empty : Model.MachineTypeId.ToString())
                                                                                              .Placeholder("--Select Machine Type --")
                                                                                              .DataTextField("MachineTypeName")
                                                                                              .DataValueField("MachineTypeId")
                                                                                              .HtmlAttributes(new { @readonly = "readonly" })
                                                                                              .DataSource(source =>
                                                                                              {
                                                                                                  source.Read(read =>
                                                                                                  {
                                                                                                      read.Action("GetMachineTypeList", "Common");
                                                                                                  });
                                                                                              })
                                        )

                                        @Html.ValidationMessageFor(m => m.MachineTypeId)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.MachineSerialNo, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.Kendo().TextBoxFor(m => m.MachineSerialNo).HtmlAttributes(new { @tabindex = 2, @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.MachineSerialNo)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Amount, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.Kendo().NumericTextBoxFor(m => m.Amount).HtmlAttributes(new { @tabindex = 9 }).Spinners(false).Min(0).Events(e => e.Change("changeFinalAmount"))
                                        @Html.ValidationMessageFor(m => m.Amount)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.GSTAmount, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.Kendo().NumericTextBoxFor(m => m.GSTAmount).HtmlAttributes(new { @tabindex = 10, @readonly = "readonly" }).Spinners(false).Min(0)
                                        @Html.ValidationMessageFor(m => m.GSTAmount)
                                    </div>
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.MachineModelId, new { @class = "col-sm-6 col-lg-3 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @(Html.Kendo().ComboBoxFor(m => m.MachineModelId)
                                                                                                              .Value(Model.MachineModelId == 0 ? string.Empty : Model.MachineModelId.ToString())
                                                                                                              .Placeholder("--Select Machine --")
                                                                                                              .DataTextField("MachineName")
                                                                                                              .DataValueField("MachineModelId")
                                                                                                              .Enable(false)
                                                                                                              .AutoBind(false)
                                                                                                              .CascadeFrom("MachineTypeId")
                                                                                                              .HtmlAttributes(new { @tabindex = 4, @readonly = "readonly" })
                                                                                                              .DataSource(source =>
                                                                                                              {
                                                                                                                  source.Read(read =>
                                                                                                                  {
                                                                                                                      read.Action("GetMachineModelList", "Common").Data("filterMachine");
                                                                                                                  }).ServerFiltering(true);
                                                                                                              })
                                        )
                                        @Html.ValidationMessageFor(m => m.MachineModelId)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.MachineDescription, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.TextAreaFor(m => m.MachineDescription, 2, 5, new { @class = "k-textbox" })
                                        @Html.ValidationMessageFor(m => m.MachineDescription)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.GSTPercentageId, new { @class = "col-sm-6 col-lg-3 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @(Html.Kendo().ComboBoxFor(m => m.GSTPercentageId)
                                                                      .Value(Model.GSTPercentageId == 0 ? string.Empty : Model.GSTPercentageId.ToString())
                                                                      .Placeholder("--Select GST Percentage --")
                                                                      .DataTextField("Percentage")
                                                                      .DataValueField("Id")
                                                                      .HtmlAttributes(new { @tabindex = 2, @data_value_primitive = true })
                                                                      .DataSource(source =>
                                                                      {
                                                                          source.Read(read =>
                                                                          {
                                                                              read.Action("GetGSTPercentageList", "Common");
                                                                          });
                                                                      })
                                                                      .Events(e => e.Change("changeFinalAmount"))
                                        )
                                        @Html.ValidationMessageFor(m => m.GSTPercentageId)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.FinalAmount, new { @class = "col-sm-6 col-lg-3 control-label" })
                                    <div class="col-sm-6 col-lg-9 controls">
                                        @Html.Kendo().NumericTextBoxFor(m => m.FinalAmount).HtmlAttributes(new { @readonly = "readonly" }).Spinners(false).Min(0)
                                        @Html.ValidationMessageFor(m => m.FinalAmount)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(m => m.Remarks, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.TextAreaFor(m => m.Remarks, 2, 5, new { @class = "k-textbox" })
                                        @Html.ValidationMessageFor(m => m.Remarks)
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.Label("Is Different Ship-Address", new { @class = "col-sm-6 col-lg-6 col-form-label" })
                                    <div class="col-sm-6 col-lg-9">
                                        @Html.Kendo().CheckBoxFor(m => m.IsDifferentShipAddress).HtmlAttributes(new { @tabindex = 14, @onclick = "isDiffrentShipChk()" })
                                        @Html.ValidationMessageFor(m => m.IsDifferentShipAddress)
                                    </div>
                                </div>

                                <div id="shipAddress2">

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ShipCompanyName, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                        <div class="col-sm-6 col-lg-9">
                                            @Html.Kendo().TextBoxFor(m => m.ShipCompanyName).HtmlAttributes(new { @tabindex = 16 })
                                            @Html.ValidationMessageFor(m => m.ShipCompanyName)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ShipAddressline1, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                        <div class="col-sm-6 col-lg-9">
                                            @Html.Kendo().TextBoxFor(m => m.ShipAddressline1).HtmlAttributes(new { @tabindex = 16 })
                                            @Html.ValidationMessageFor(m => m.ShipAddressline1)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ShipAddressline3, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                        <div class="col-sm-6 col-lg-9">
                                            @Html.Kendo().TextBoxFor(m => m.ShipAddressline3).HtmlAttributes(new { @tabindex = 16 })
                                            @Html.ValidationMessageFor(m => m.ShipAddressline3)
                                        </div>
                                    </div>
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div id="shipAddress1" style="margin-top: 63px;">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ShipAddressline2, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                        <div class="col-sm-6 col-lg-9">
                                            @Html.Kendo().TextBoxFor(m => m.ShipAddressline2).HtmlAttributes(new { @tabindex = 16 })
                                            @Html.ValidationMessageFor(m => m.ShipAddressline2)
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ShipGSTNo, new { @class = "col-sm-6 col-lg-4 col-form-label" })
                                        <div class="col-sm-6 col-lg-9">
                                            @Html.Kendo().TextBoxFor(m => m.ShipGSTNo).HtmlAttributes(new { @tabindex = 16 })
                                            @Html.ValidationMessageFor(m => m.ShipGSTNo)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>

    $(document).ready(function () {
        isDiffrentShipChk();
    });

    function filterMachine(e) {
        return {
            MachineTypeId: getKendComboboxValue('MachineTypeId')
        };
    }

    function filterContactPerson(e) {
        return {
            CustomerId: getKendComboboxValue('CustomerId')
        };
    }
    
    function changeFinalAmount() {
        var amount = getkendoNumericTextBoxValue('Amount');
        var gstPer = getKendComboboxText('GSTPercentageId');
        var gstAmount = 0;
        if (gstPer > 0) {
            gstAmount = (amount * gstPer) / 100;
        }
        var finalAmount = amount + gstAmount;
        setkendoNumericTextBoxValue('GSTAmount', gstAmount);
        setkendoNumericTextBoxValue('FinalAmount', finalAmount);
    }

    function isDiffrentShipChk(e) {
        var state = $("#IsDifferentShipAddress").is(':checked');
        if (state) {
            $("#shipAddress1").show();
            $("#shipAddress2").show();
        }
        else {
            $("#shipAddress1").hide();
            $("#shipAddress2").hide();
            setInputValueById('ShipAddressline1', '');
            setInputValueById('ShipAddressline2', '');
            setInputValueById('ShipAddressline3', '');
            setInputValueById('ShipGSTNo', '');
            setInputValueById('ShipCompanyName', '');
        }
    }
</script>
