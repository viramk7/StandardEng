
@{
    ViewBag.Title = "Pre Commissioning";
}

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">Home</span> - Pre Commissioning</h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action("Index","Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">Pre Commissioning</span>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Pre Commissioning List</h5>
                </div>
                <div class="card-body">

                    @(Html.Kendo().Grid<tblPreCommissioning>()
                                   .Name("gridPCommissioning")
                                   .Columns(columns =>
                                   {
                                       if (AuthorizationHelper.CanEditDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                       {
                                           columns.Command(command =>
                                           {
                                               if (AuthorizationHelper.CanEdit(ViewContext.RouteData.Values["Controller"].ToString()))
                                               {
                                                   command.Custom("Edit").Text("<span class='k-icon k-i-edit' title='Edit'></span>").HtmlAttributes(new { @style = "margin:2px" }).Click("onEdit");
                                               }
                                               if (AuthorizationHelper.CanDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                               {
                                                   command.Custom("Delete").Text("<span class='k-icon k-i-close' title='Delete'></span>").HtmlAttributes(new { @style = "margin:2px;" }).Click("onDelete");
                                               }
                                           }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                              .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);
                                       }
                                       columns.ForeignKey(d => d.CustomerId, (IEnumerable)ViewBag.CustomerList, "CustomerId", "CustomerName");
                                       columns.ForeignKey(d => d.ContactPersonId, (IEnumerable)ViewBag.ContactPersonsList, "ContactPersonId", "ContactPersonName");
                                       //columns.Bound(d => d.DispatchDate).Format("{0:"+ WebHelper.DateFormate +"}");
                                      
                                   })
                                   .ToolBar(toolbar =>
                                   {
                                       if (AuthorizationHelper.CanAdd(ViewContext.RouteData.Values["Controller"].ToString()))
                                       {
                                           toolbar.Template("<a class='k-button k-button-icontext' onclick='onAdd()' href='javascript:void(0)'><span class='k-icon k-i-plus' title='Add'></span>Add</a> ");
                                       }
                                   })
                                   .Pageable(x =>
                                   {
                                       x.Refresh(true);
                                       x.PageSizes(WebHelper.PageSizes);
                                   })
                                   .Sortable(sortable => sortable.AllowUnsort(false))
                                   .Filterable()
                                   .Scrollable(e => e.Enabled(true))
                                   .NoRecords()
                                   .Events(e => e.DataBound("onDataBound"))
                                   .DataSource(dataSource => dataSource
                                       .Ajax()
                                       .ServerOperation(true)
                                       .PageSize(WebHelper.PageSize)
                                       .Model(model => model.Id(d => d.PreCommissioningId))
                                       .Events(events => events.Error("onError(\"gridPCommissioning\")"))
                                       .Read(read => read.Action("KendoRead", "PreCommissioning"))
                                   ))
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
     function onAdd() {
        window.location.href = '@Url.Action("Create", "PreCommissioning")';
    }

    function onEdit(e) {
        e.preventDefault();
        var tr = $(e.target).closest("tr");
        var data = this.dataItem(tr);
        var urllink = '@Url.Action("Edit", "PreCommissioning")';
        if (data != null)
            window.location.href = urllink + "?id=" + data.PreCommissioningId;
    }


    function onDelete(e) {
        bootbox.confirm('Are you sure you want to delete this Pre Commissioning?', function (result) {
            if (result === true) {
                e.preventDefault();
                var grid = $("#gridPCommissioning").data("kendoGrid");
                var tr = $(e.target).closest("tr");
                var data = grid.dataItem(tr);
                var url = '@Url.Action("KendoDestroy", "PreCommissioning")';
                if (data != null)
                    callwebservice(url, 'id=' + data.PreCommissioningId, DeleteComplete, false, datatypeEnum.text, typeEnum.post);
            }
        }, 'popup-confirmation');
    }

    function DeleteComplete(returString) {
        if (returString != null) {
            if (returString !== "") {
                showMessageOnly(returString, 'popup-error');
            } else {
                SucessMessage('Pre Commissioning deleted succesfully.')
                readKendoGrid('gridPCommissioning');
            }
        }
    }

    function onDataBound(e) {
        var grid = $("#gridPCommissioning").data("kendoGrid");

        for (var i = 0; i < grid.columns.length; i++) {
            grid.autoFitColumn(i);
        }
    }
</script>

