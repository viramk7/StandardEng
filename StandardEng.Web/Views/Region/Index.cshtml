
@{
    ViewBag.Title = "Area";
}

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">Home</span> - Master</h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action("Index","Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">Master - Area</span>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">Area List</h5>
                </div>
                <div class="card-body">

                    @(Html.Kendo().Grid<tblRegion>()
                                       .Name("gridRegion")
                                       .Columns(columns =>
                                       {
                                           if (AuthorizationHelper.CanEditDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                           {
                                               columns.Command(command =>
                                               {
                                                   if (AuthorizationHelper.CanEdit(ViewContext.RouteData.Values["Controller"].ToString()))
                                                   {
                                                       command.Edit().Text(" ");
                                                   }
                                                   if (AuthorizationHelper.CanDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                                   {
                                                       command.Destroy().Text(" ");
                                                   }
                                               }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                                  .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);

                                           }

                                           columns.Bound(d => d.Name);
                                           columns.ForeignKey(d => d.CityId, (IEnumerable)ViewBag.CityList, "CityId", "CityName");

                                           if (AuthorizationHelper.CanChangeStatus(ViewContext.RouteData.Values["Controller"].ToString()))
                                           {
                                               columns.Bound(d => d.IsActive).Filterable(false)
                                                              .ClientTemplate(Html.SetStatusClientTemplate("IsActive", "Region", "ChangeStatus",
                                                              "id=#= Id #", "#= Id #", "gridRegion", "Region")).HtmlAttributes(WebHelper.StatusColumnStyle)
                                                              .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);
                                           }
                                       })
                                       .ToolBar(toolbar =>
                                       {
                                           if (AuthorizationHelper.CanAdd(ViewContext.RouteData.Values["Controller"].ToString()))
                                           {
                                               toolbar.Create().Text("Add");
                                           }
                                       })
                                       .Editable(editable =>
                                       {
                                           editable.Mode(GridEditMode.PopUp);
                                           editable.DisplayDeleteConfirmation("Are you sure you want to delete this Area?");
                                           editable.Window(x => x.Title("Manage Area"));
                                       })
                                       .Pageable(x =>
                                       {
                                           x.Refresh(true);
                                           x.PageSizes(WebHelper.PageSizes);
                                       })
                                       .Sortable(sortable => sortable.AllowUnsort(false))
                                       .Filterable()
                                       .NoRecords()
                                       .Events(grid => grid.Edit("edit"))
                                       .DataSource(dataSource => dataSource
                                           .Ajax()
                                           .ServerOperation(true)
                                           .PageSize(WebHelper.PageSize)
                                           .Model(model => model.Id(d => d.Id))
                                           .Events(events => events.Error("onError(\"gridRegion\")"))
                                           .Create(update => update.Action("KendoSave", "Region"))
                                           .Read(read => read.Action("KendoRead", "Region"))
                                           .Update(update => update.Action("KendoSave", "Region"))
                                           .Destroy(update => update.Action("KendoDestroy", "Region"))
                                       ))
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
        function edit(e) {
            if (e.model.isNew()) {
                e.model.set("IsActive", true);
                e.model.set("CityId", "");
            }
            e.container.data('kendoWindow').bind('activate', function () {
                setFocusById('Name');
            });
        }

</script>
