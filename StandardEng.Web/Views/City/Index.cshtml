
@{
    ViewBag.Title = "City";
}

<div class="page-header page-header-light">
    <div class="page-header-content header-elements-md-inline">
        <div class="page-title d-flex">
            <h4><i class="icon-arrow-left52 mr-2"></i> <span class="font-weight-semibold">Home</span> - Master</h4>
            <a href="#" class="header-elements-toggle text-default d-md-none"><i class="icon-more"></i></a>
        </div>
    </div>
    <div class="breadcrumb-line breadcrumb-line-light header-elements-md-inline">
        <div class="d-flex">
            <div class="breadcrumb">
                <a href="@Url.Action("Index","Home")" class="breadcrumb-item"><i class="icon-home2 mr-2"></i> Home</a>
                <span class="breadcrumb-item active">Master - Cities</span>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header header-elements-inline">
                    <h5 class="card-title">City List</h5>
                </div>
                <div class="card-body">

                    @(Html.Kendo().Grid<tblCity>()
                               .Name("gridCity")
                               .Columns(columns =>
                               {
                                   if (AuthorizationHelper.CanEditDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                   {
                                       columns.Command(command =>
                                       {
                                           if (AuthorizationHelper.CanEdit(ViewContext.RouteData.Values["Controller"].ToString()))
                                           {
                                               command.Edit().Text(" ");
                                           }
                                           if (AuthorizationHelper.CanDelete(ViewContext.RouteData.Values["Controller"].ToString()))
                                           {
                                               command.Destroy().Text(" ");
                                           }
                                       }).Title("Action").HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit)
                                          .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanEdit);

                                   }
                                   columns.Bound(d => d.CityName);
                                   columns.ForeignKey(d => d.StateId, (IEnumerable)ViewBag.StateList, "StateId", "StateName");
                                   columns.ForeignKey(d => d.CountryId, (IEnumerable)ViewBag.CountryList, "CountryId", "CountryName");
                                   if (AuthorizationHelper.CanChangeStatus(ViewContext.RouteData.Values["Controller"].ToString()))
                                   {
                                       columns.Bound(d => d.IsActive).Filterable(false)
                                                      .ClientTemplate(Html.SetStatusClientTemplate("IsActive", "City", "ChangeStatus",
                                                      "id=#= CityId #", "#= CityId #", "gridCity", "City")).HtmlAttributes(WebHelper.StatusColumnStyle)
                                                      .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);
                                   }
                               })
                               .ToolBar(toolbar =>
                               {
                                   if (AuthorizationHelper.CanAdd(ViewContext.RouteData.Values["Controller"].ToString()))
                                   {
                                       toolbar.Create().Text("Add");
                                   }
                               })
                               .Editable(editable =>
                               {
                                   editable.Mode(GridEditMode.PopUp).TemplateName("tblCity");
                                   editable.DisplayDeleteConfirmation("Are you sure you want to delete this City?");
                                   editable.Window(x => x.Title("Manage City"));
                               })
                               .Pageable(x =>
                               {
                                   x.Refresh(true);
                                   x.PageSizes(WebHelper.PageSizes);
                               })
                               .Sortable(sortable => sortable.AllowUnsort(false))
                               .Filterable(filter => filter.Enabled(false))
                               .NoRecords()
                               .Events(grid => grid.Edit("edit"))
                               .DataSource(dataSource => dataSource
                                   .Ajax()
                                   .ServerOperation(true)
                                   .PageSize(WebHelper.PageSize)
                                   .Model(model => model.Id(d => d.CityId))
                                   .Events(events => events.Error("onError(\"gridCity\")"))
                                   .Create(update => update.Action("KendoSave", "City"))
                                   .Read(read => read.Action("KendoRead", "City"))
                                   .Update(update => update.Action("KendoSave", "City"))
                                   .Destroy(update => update.Action("KendoDestroy", "City"))
                               ))
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function edit(e) {
        if (e.model.isNew()) {
            e.model.set("IsActive", true);
            e.model.set("StateId", "");
            e.model.set("CountryId", "");
        }
        e.container.data('kendoWindow').bind('activate', function () {
            setFocusById('CityName');
        });
    }

    function filterState(e) {
        return {
            CountryId: $("#CountryId").val()
        };
    }
</script>