@using StandardEng.Common

<style>
    .k-edit-form-container {
        width: 615px !important;
    }
</style>

<div class="k-edit-form-container">
    @(Html.Kendo().Grid<AssignRoleList_Result>()
                  .Name("gvRoleMenus")
                  .Columns(columns =>
                  {
                      columns.Bound(x => x.MenuName).Title(CommonMessage.Menu);

                      columns.Bound(x => x.IsView).Title(CommonMessage.View)
                          .ClientTemplate(@"<input type='checkbox' class='chkView' value='#= IsView #' #= IsView ? checked='checked':'' #/>")
                          .HtmlAttributes(WebHelper.StatusColumnStyle)
                          .HeaderTemplate(@"" + CommonMessage.View + "<br/><input type='checkbox' id='chkHeaderView' onclick='checkAllView(this)'></input>")
                          .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);

                      columns.Bound(x => x.IsEdit).Title(CommonMessage.Edit)
                          .ClientTemplate(@"<input type='checkbox' class= 'chkEdit'  value='#= IsEdit #' #= IsEdit ? checked='checked':'' #/>")
                          .HtmlAttributes(WebHelper.StatusColumnStyle)
                      .HeaderTemplate(@"" + CommonMessage.Edit + "<br/><input type='checkbox' id='chkHeaderEdit' onclick='checkAllEdit(this)'></input>")
                      .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);

                      columns.Bound(x => x.IsInsert).Title(CommonMessage.Insert)
                          .ClientTemplate(@"<input type='checkbox' class='chkAdd'  value='#= IsInsert #' #= IsInsert ? checked='checked':'' #/>")
                          .HtmlAttributes(WebHelper.StatusColumnStyle)
                      .HeaderTemplate(@"" + CommonMessage.Insert + "<br/><input  type='checkbox' id='chkHeaderAdd' onclick='checkAllAdd(this)'></input>")
                      .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);

                      columns.Bound(x => x.IsDelete).Title(CommonMessage.Delete)
                          .ClientTemplate(@"<input type='checkbox' class= 'chkDelete'  value='#= IsDelete #' #= IsDelete ? checked='checked':'' #/>")
                          .HtmlAttributes(WebHelper.StatusColumnStyle)
                      .HeaderTemplate(@"" + CommonMessage.Delete + "<br/><input type='checkbox' id='chkHeaderDelete' onclick='checkAllDelete(this)'></input>")
                      .HeaderHtmlAttributes(WebHelper.StatusColumnStyle);

                      columns.Bound(x => x.IsChangeStatus).Title(CommonMessage.ChangeStatus)
                          .ClientTemplate(@"<input type='checkbox' class= 'chkChangeStatus'  value='#= IsChangeStatus #' #= IsChangeStatus ? checked='checked':'' #/>")
                          .HtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanStatus)
                      .HeaderTemplate(@"" + CommonMessage.ChangeStatus + "<br/><input type='checkbox' id='chkHeaderChangeStatus' onclick='checkAllChangeStatus(this)'></input>")
                      .HeaderHtmlAttributes(WebHelper.ActionCenterColumnStyleWithCanStatus);

                  })
                  .Editable(editable => editable.Mode(GridEditMode.InCell))
                  .Pageable(x => x.Enabled(false))
                  .NoRecords()

                  .Scrollable(x => x.Height(330))
                  .DataSource(dataSource => dataSource
                      .Ajax()
                      .ServerOperation(false)
                      .Batch(true)
                      .Model(model =>
                      {
                          model.Id(product => product.RoleMenuPK);
                          model.Field(product => product.MenuName).Editable(false);
                      })

                      .Read(read => read.Action("GetUserRightsList", "Roles").Data("additionalInfo"))
                  ))
    <div class="k-edit-buttons k-state-default">
        <a class="k-button k-button-icontext" href="#" title="Save" onclick=" Save() ">Save</a>
        <a class="k-button k-button-icontext" href="#" title="Reset" onclick=" Reset() ">Reset</a>
        <a class="k-button k-button-icontext" href="#" title="Cancel" onclick=" ClosePopup() ">Cancel</a>
    </div>
</div>

<script>
    $(function () {

        $('#gvRoleMenus').on('click', '.chkView', function () {
            var checked = $(this).is(':checked');
            var grid = $('#gvRoleMenus').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsView', checked);
            CheckAllView();
        });

        $('#gvRoleMenus').on('click', '.chkEdit', function () {
            var checked = $(this).is(':checked');
            var grid = $('#gvRoleMenus').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsEdit', checked);
            CheckAllEdit();
        });

        $('#gvRoleMenus').on('click', '.chkAdd', function () {
            var checked = $(this).is(':checked');
            var grid = $('#gvRoleMenus').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsInsert', checked);
            CheckAllAdd();
        });

        $('#gvRoleMenus').on('click', '.chkDelete', function () {
            var checked = $(this).is(':checked');
            var grid = $('#gvRoleMenus').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsDelete', checked);
            CheckAllDelete();
        });

        $('#gvRoleMenus').on('click', '.chkChangeStatus', function () {
            var checked = $(this).is(':checked');
            var grid = $('#gvRoleMenus').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
            dataItem.set('IsChangeStatus', checked);
            CheckAllStatusChange();
        });
    });

    function checkAllView(ele) {
        var state = $(ele).is(':checked');
        var grid = $('#gvRoleMenus').data().kendoGrid;
        $.each(grid.dataSource._data, function () {
            if (this['IsView'] !== state)
                this.dirty = true;
            this['IsView'] = state;
        });
        grid.refresh();
    }

    function checkAllEdit(ele) {
        var state = $(ele).is(':checked');
        var grid = $('#gvRoleMenus').data().kendoGrid;
        $.each(grid.dataSource._data, function () {
            if (this['IsEdit'] !== state)
                this.dirty = true;
            this['IsEdit'] = state;
        });
        grid.refresh();
    }

    function checkAllAdd(ele) {
        var state = $(ele).is(':checked');
        var grid = $('#gvRoleMenus').data().kendoGrid;
        $.each(grid.dataSource._data, function () {
            if (this['IsInsert'] !== state)
                this.dirty = true;
            this['IsInsert'] = state;
        });
        grid.refresh();
    }

    function checkAllDelete(ele) {
        var state = $(ele).is(':checked');
        var grid = $('#gvRoleMenus').data().kendoGrid;
        $.each(grid.dataSource._data, function () {
            if (this['IsDelete'] !== state)
                this.dirty = true;
            this['IsDelete'] = state;
        });
        grid.refresh();
    }

    function checkAllChangeStatus(ele) {
        var state = $(ele).is(':checked');
        var grid = $('#gvRoleMenus').data().kendoGrid;
        $.each(grid.dataSource._data, function () {
            if (this['IsChangeStatus'] !== state)
                this.dirty = true;
            this['IsChangeStatus'] = state;
        });
        grid.refresh();
    }

    function Save() {
        var url = '@Url.Action("SaveUserRights", "Roles")';
        var gridData = $("#gvRoleMenus").data("kendoGrid").dataSource.data();
        var paramValue = kendo.stringify(gridData);
        callwebservice(url, { model: paramValue }, saveCompleted, false, datatypeEnum.text, typeEnum.post);
    }

    function saveCompleted(returString) {
        if (returString != null) {
            if (returString !== "") {
                showMessageOnly(returString, 'popup-error');
            } else {
                ClosePopup();
            }
        }
    }

    function Reset() {
        $('#chkHeaderView').attr('checked', false);
        $('#chkHeaderEdit').attr('checked', false);
        $('#chkHeaderAdd').attr('checked', false);
        $('#chkHeaderDelete').attr('checked', false);
        $('#chkHeaderChangeStatus').attr('checked', false);
        readKendoGrid('gvRoleMenus');
    }

    function ClosePopup() {
        closeKendoWindow("myWindow");
    }

    function CheckAllView() {
        var chkItem = $('.chkView');
        var chkHeader = $('#chkHeaderView');
        if ($('#gvRoleMenus ' + chkItem.selector).length !== 0 && $('#gvRoleMenus ' + chkItem.selector).length === $('#gvRoleMenus ' + chkItem.selector + ':Checked').length) {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', true);
            }
        } else {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', false);
            }
        }
    }

    function CheckAllEdit() {
        var chkItem = $('.chkEdit');
        var chkHeader = $('#chkHeaderEdit');
        if ($('#gvRoleMenus ' + chkItem.selector).length !== 0 && $('#gvRoleMenus ' + chkItem.selector).length === $('#gvRoleMenus ' + chkItem.selector + ':Checked').length) {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', true);
            }
        } else {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', false);
            }
        }
    }

    function CheckAllAdd() {
        var chkItem = $('.chkAdd');
        var chkHeader = $('#chkHeaderAdd');
        if ($('#gvRoleMenus ' + chkItem.selector).length !== 0 && $('#gvRoleMenus ' + chkItem.selector).length === $('#gvRoleMenus ' + chkItem.selector + ':Checked').length) {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', true);
            }
        } else {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', false);
            }
        }
    }

    function CheckAllDelete() {
        var chkItem = $('.chkDelete');
        var chkHeader = $('#chkHeaderDelete');
        if ($('#gvRoleMenus ' + chkItem.selector).length !== 0 && $('#gvRoleMenus ' + chkItem.selector).length === $('#gvRoleMenus ' + chkItem.selector + ':Checked').length) {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', true);
            }
        } else {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', false);
            }
        }
    }

    function CheckAllStatusChange() {
        var chkItem = $('.chkChangeStatus');
        var chkHeader = $('#chkHeaderChangeStatus');
        if ($('#gvRoleMenus ' + chkItem.selector).length !== 0 && $('#gvRoleMenus ' + chkItem.selector).length === $('#gvRoleMenus ' + chkItem.selector + ':Checked').length) {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', true);
            }
        } else {
            if (chkHeader.length > 0) {
                $(chkHeader[0]).prop('checked', false);
            }
        }
    }


</script>


